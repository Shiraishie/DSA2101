?summarize
?mean
#To calculate proportions, we need to remove na values
flights %>% group_by(carrier) %>%
summarize(pct = mean(dep_delay>0, na.rm = TRUE))
#On averagem which airport do flights arrive most early
flights %>% filter(!is.na(arr_delay)) %>%
left_join(airports, by = c('dest' = 'faa')) %>%
count(name, wt = mean(arr_delay<0)) %>% slice_min(n, n=1)
#On averagem which airport do flights arrive most early
flights %>% filter(!is.na(arr_delay)) %>%
left_join(airports, by = c('dest' = 'faa')) %>%
count(name, wt = mean(arr_delay<0)) %>% slice_min(n, n=1)
#On averagem which airport do flights arrive most early
flights %>% filter(!is.na(arr_delay)) %>%
left_join(airports, by = c('dest' = 'faa'))
flights %>% filter(!is.na(arr_delay)) %>%
left_join(airports, by = c('dest' = 'faa')) %>%
count(dest,name, wt = mean(arr_delay<0)) %>% slice_min(n, n=1)
#On averagem which airport do flights arrive most early
flights %>% filter(!is.na(arr_delay)) %>%
left_join(airports, by = c('dest' = 'faa')) %>%
count(name,dest, wt = mean(arr_delay<0)) %>% slice_min(n, n=1)
dest
#On averagem which airport do flights arrive most early
flights %>% filter(!is.na(arr_delay)) %>%
left_join(airports, by = c('dest' = 'faa')) %>%
count(dest,name, wt = mean(arr_delay<0)) %>% slice_min(n, n=1)
#On averagem which airport do flights arrive most early
flights %>%
left_join(airports, by = c('dest' = 'faa')) %>%
count(dest,name, wt = mean(arr_delay<0, na.rm = TRUE)) %>% slice_min(n, n=1)
#On averagem which airport do flights arrive most early
flights %>% left_join(airports, by = c('dest' = 'faa'))
#On averagem which airport do flights arrive most early
flights %>% left_join(airports, by = c('dest' = 'faa')) %>%
count(name, wt = mean(arr_delay))
#On averagem which airport do flights arrive most early
flights %>% left_join(airports, by = c('dest' = 'faa')) %>%
count(name, wt = mean(arr_delay, na.rm = TRUE))
#On averagem which airport do flights arrive most early
flights %>% left_join(airports, by = c('dest' = 'faa')) %>%
count(name, wt = mean(arr_delay < 0, na.rm = TRUE))
?count
#On averagem which airport do flights arrive most early
flights %>% left_join(airports, by = c('dest' = 'faa')) %>%
count(name, wt = mean(arr_delay, na.rm = TRUE))
#On averagem which airport do flights arrive most early
flights %>% left_join(airports, by = c('dest' = 'faa')) %>%
count(name, wt = mean(arr_delay, na.rm = TRUE)) %>% slice_min(n, n=1)
#On averagem which airport do flights arrive most early
flights %>% left_join(airports, by = c('dest' = 'faa')) %>%
count(dest,name, wt = mean(arr_delay, na.rm = TRUE)) %>% slice_min(n, n=1)
#On averagem which airport do flights arrive most early
flights %>% left_join(airports, by = c('dest' = 'faa')) %>%
count(dest,name, wt = mean(arr_delay, na.rm = TRUE))
#On averagem which airport do flights arrive most early
flights %>% left_join(airports, by = c('dest' = 'faa')) %>%
count(dest,name, wt = mean(arr_delay, na.rm = TRUE)) %>% sort()
#On averagem which airport do flights arrive most early
flights %>% left_join(airports, by = c('dest' = 'faa')) %>%
count(dest,name, wt = mean(arr_delay, na.rm = TRUE)) %>% arrange()
#On averagem which airport do flights arrive most early
flights %>% left_join(airports, by = c('dest' = 'faa')) %>%
count(dest,name, wt = mean(arr_delay, na.rm = TRUE)) %>% arrange(n)
#if want to calculate proportions then use arr_delay < 0 which returns a boolean 0 or 1 for each entry, see the table is diff
flights %>% left_join(airports, by = c('dest' = 'faa')) %>%
count(dest,name, wt = mean(arr_delay < 0, na.rm = TRUE))  %>% arrange(n)
#if want to calculate proportions then use arr_delay < 0 which returns a boolean 0 or 1 for each entry, see the table is diff
flights %>% left_join(airports, by = c('dest' = 'faa')) %>%
count(dest,name, wt = mean(arr_delay < 0, na.rm = TRUE))  %>% arrange(desc(n))
#On averagem which airport do flights arrive most early
flights %>% left_join(airports, by = c('dest' = 'faa')) %>%
count(dest,name, wt = mean(arr_delay, na.rm = TRUE)) %>% arrange(n)
barplot(df$n, names.arg = df$month)
barplot(df$n, names.arg = df$month, ylab = 'arr_delay')
View(df)
barplot(df$n, names.arg = df$month, ylab = 'arr_delay',border =  NA)
sim3 = rnorm(1000,2,3) + rnorm(1000,1,4)
sim3
mean(sim3)
var(sim3)
?rnorm
?lm
?lm(y~x)
url = 'https://api.data.gov.sg/v1/environment/24-hour-weather-forecast'
library(jsonlite)
fromJSON(url)
check = fromJSON(url)
View(check)
check[[1]]
library(dplyr)
library(tidyverse)
library(stringr)
library(readxl)
library(readr)
data(airquality)
View(airquality)
data(airquality)
airquality %>% count(month)
airquality %>% distinct(Month)
airquality %>% is.na()
airquality %>% which(is.na())
airquality %>% which(is.na)
which(is.na(airquality))
airquality %>% na.omit()
airquality = airquality %>% na.omit()
df = airquality %>% na.omit()
View(df)
df_summer = df %>% filter(Month %in% c(5,6))
df_fall = df %>% filter(Month %in% c(7:9))
?ifesle
?ifelse
df = df %>% mutate(season = ifelse(Month %in% c(5,6), 'Summer', 'Fall'))
?tapply
tapply(df, df$season, summary(df$Temp))
tapply(df, df$season, function(x) summary(x))
summary(df$Temp)
tapply(df$season, summary(df$Temp))
tapply(df$season)
?tapply
tapply(df$season, df$Temp, function(x) summary(x))
tapply(df$Temp, df$season, function(x) summary(x))
plot(df$Month, df$Temp)
boxplot(df$Month, df$Temp)
plot(df$Month, df$Temp)
?boxplot
boxplot(df$Temp)
?boxplot
boxplot(df$Temp ~ df$Month)
boxplot(df$Temp ~ df$Month, xlab = 'Month', ylab = 'Temperature')
?boxplot
?par
boxplot(df$Temp ~ df$Month, xlab = 'Month', ylab = 'Temperature',  xaxt = 'n')
?axis
axis(1, labels = c('May', 'Jun','Jul', 'Aug', 'Sep'))
axis(1, labels = c('May', 'Jun','Jul', 'Aug', 'Sep'))
axis(1, at = c(1:5), labels = c('May', 'Jun','Jul', 'Aug', 'Sep'))
#tutorial 2
df = read_csv('../data/Shanghai.csv')
setwd("C:/Users/shiro/Desktop/DSA2101/src")
#tutorial 2
df = read_csv('../data/Shanghai.csv')
head(df,3)
which(is.na(df))
View(df)
avg_temp = df %>% mean(Temp)
avg_temp = mean(df$Temp)
avg_temp = df %>% count(Month, wt = mean(Temp))
View(avg_temp)
avg_temp = df %>% count(Month, wt = mean(Temp)) %>%
mutate(n = round(n,2))
View(df)
View(avg_temp)
View(df)
df = df %>% mutate(yr_month = str_c(Year,Month))
?str_c
df = df %>% mutate(yr_month = str_c(Year,Month, sep = '-'))
head(df,5)
library(lubridate)
df = df %>% mutate(yr_month = date(yr_month))
df = df %>% mutate(yr_month = ym(yr_month))
glimpse(df)
plot(df$Month, df$Temp)
plot(avg_temp$Month, avg_temp$n)
plot(avg_temp$Month, avg_temp$n, type = 'b')
plot(avg_temp$Month, avg_temp$n, type = 'b', pch = 16)
tapply(df$Month, df$Temp, mean())
tapply(df$Month, df$Temp, mean)
tapply(df$Temp, df$Month, mean)
plot(avg_temp$Month, avg_temp$n, type = 'b', pch = 16)
?plot
plot(avg_temp$Month, avg_temp$n, type = 'b', pch = 16, xlim = 30)
?xlim
?plot
plot(avg_temp$Month, avg_temp$n, type = 'b', pch = 16, ylim = 30)
plot(avg_temp$Month, avg_temp$n, type = 'b', pch = 16, ylim = (0,30))
plot(avg_temp$Month, avg_temp$n, type = 'b', pch = 16, ylim = c(0,30))
plot(avg_temp$Month, avg_temp$n, type = 'b', pch = 16, ylim = c(30))
plot(avg_temp$Month, avg_temp$n, type = 'b', pch = 16, ylim = c(2,30))
plot(avg_temp$Month, avg_temp$n, type = 'b', pch = 16)
df1 = df %>% filter(Month == 12)
View(df1)
df1 = df %>% filter(Year == 2012)
plot(df1$Month, df1$Temp, type = 'b', pch = 16)
plot(df1$Month, df1$Temp, type = 'b', pch = 16, xaxt = 'n')
axis(1, at c=(1,4,7,10))
axis(1, at = c(1,4,7,10), label = c('Jan', 'Apr', 'Jul', 'Oct'))
#tutorial 3
qn1_1 = read_excel('../data/tourist.xlsx')
getwd()
View(qn1_1)
#tutorial 3
qn1_1 = read_excel('../data/tourist.xlsx', range = 'A10:G26')
View(qn1_1)
qn1_2 = qn1_1 %>% select(-c(1,12,16))
qn1_2 = qn1_1 %>% filter(-c(1,12,16), )
qn1_2 = qn1_1[-c(1,12,16), ]
View(qn1_2)
qn1_2 = qn1_1[-c(12,16), ]
qn1_2 = qn1_1[-c(12,16), ] %>% rename(arrivals = 'Data Series')
qn1_3 = qn1_2 %>% select('2022 Dec')
View(qn1_3)
qn1_3 = qn1_2 %>% select(arrivals, '2022 Dec'
qn1_3 = qn1_2 %>% select(arrivals, '2022 Dec')
qn1_3 = qn1_2 %>% select(arrivals, '2022 Dec')
qn1_3 = qn1_2 %>% select(arrivals, '2022 Dec') %>%
mutate(percentage = '2022 Dec' / `2022 Dec`[1])
qn1_2 = qn1_1[-c(12,16), ] %>% rename(arrivals = '2022 Dec')
qn1_2 = qn1_1[-c(12,16), ] %>% rename(days = 'Data Series')
qn1_3 = qn1_2 %>% select(days, '2022 Dec') %>% rename(arrivals = '2022 Dec')
qn1_3 = qn1_2 %>% select(days, '2022 Dec') %>% rename(arrivals = '2022 Dec') %>%
mutate(percentage = arrivals / arrivals[1])
qn1_3 = qn1_3[-1,]
?gsub
qn1_3[1]
qn1_3[1,1] = 0
qn1_3[1,1]
qn1_3 = qn1_3 %>% gsub(' Day (Number)', '')
#tutorial 3
qn1_1 = read_excel('../data/tourist.xlsx', range = 'A10:G26')
qn1_2 = qn1_1[-c(12,16), ] %>% rename(days = 'Data Series')
qn1_3 = qn1_2 %>% select(days, '2022 Dec') %>% rename(arrivals = '2022 Dec') %>%
mutate(percentage = arrivals / arrivals[1])
qn1_4 = qn1_3 %>% gsub(' Day (Number)', '')
qn1_4 = gsub(qn1_3 ,' Day (Number)', '')
qn1_3 %>%
qn1_4 = gsub(' Day (Number)', '', qn1_3$days)
qn1_4 = gsub(' Day (Number)', '', qn1_3$days)
qn1_4 = gsub(' Day (Number)', '', qn1_3)
qn1_4 = gsub(' Days (Number)', '', qn1_3)
qn1_4 = sapply(qn1_3$days ,gsub(' Days (Number)', ''))
qn1_4 = sapply(qn1_3,gsub(' Days (Number)', '', qn1_3$days))
qn1_4 = gsub(' Days (Number)', '', qn1_3$days)
qn1_4
qn1_4 = gsub(' Days (Number)', '', qn1_3$days)
qn1_4
qn1_4 = qn1_3 %>% mutate(days = gsub(' Day (Number)', ''))
qn1_4 = qn1_3 %>% mutate(days = gsub(' Day (Number)', '', days))
View(qn1_4)
qn1_4 = qn1_3 %>% mutate(days = gsub('Days (Number)', '', days))
qn1_4 = qn1_3 %>% mutate(days = gsub('Days (Number)', '', days[2]))
qn1_4 = qn1_3 %>% mutate(days = gsub('Days (Number)', '', days))
qn1_4 = qn1_3 %>% mutate(days = str_replace('Days (Number)', ''))
qn1_4 = qn1_3 %>% mutate(days = str_replace('Days (Number)', ' '))
qn1_4 = qn1_3 %>% mutate(days = str_replace(days, 'Days (Number)', ''))
View(qn1_4)
View(qn1_4)
View(qn1_4)
qn1_4 = qn1_3 %>% mutate(days = str_replace(days, '(Number)', ''))
qn1_4 = qn1_3 %>% mutate(days = str_replace(days, '\(Number)', ''))
qn1_4 = qn1_3 %>% mutate(days = str_replace(days, '/(Number)', ''))
qn1_4 = qn1_3 %>% mutate(days = str_replace(days, '\ (Number)', ''))
qn1_4 = qn1_3 %>% mutate(days = str_replace(days, '\\(Number)', ''))
qn1_4 = qn1_3 %>% mutate(days = str_replace(days, '\\ (Number)', ''))
qn1_4 = qn1_3 %>% mutate(days = str_replace(days, ' \(Number)', ''))
qn1_4 = qn1_3 %>% mutate(days = str_replace(days, '\(Number)', ''))
qn1_4 = qn1_3 %>% mutate(days = str_replace(days, '\\(Number)', ''))
qn1_4 = qn1_3 %>% mutate(days = str_replace(days, '\\ (Number)', ''))
qn1_4 = qn1_3 %>% mutate(days = str_replace(days, '\( Number)', ''))
qn1_4 = qn1_3 %>% mutate(days = str_replace(days, '\(Number)', ''))
qn1_4 = qn1_3 %>% mutate(days = str_replace(days, 'Days \(Number)', ''))
qn1_3 = qn1_2 %>% select(days, '2022 Dec') %>% rename(arrivals = '2022 Dec') %>%
mutate(percentage = arrivals / arrivals[1])
?rename
?rowname
?rownames
View(qn1_3)
qn1_3 = qn1_3[-1,]
qn1_4 = rownames(qn1_3, c(0:7, '8-10','11-14','15-29','30-59','60+'))
rownames(qn1_3) = c(0:7, '8-10','11-14','15-29','30-59','60+')
qn1_3 = qn1_2 %>% select(days, '2022 Dec') %>% rename(arrivals = '2022 Dec') %>%
mutate(percentage = arrivals / arrivals[1])
qn1_3 = qn1_3[-1,]
qn1_3 = qn1_3 %>% mutate(days = c(0:7, '8-10','11-14','15-29','30-59','60+'))
plot(qn1_3$days, qn1_3$percentage)
barplot(qn1_3$days, qn1_3$percentage)
barplot()
barplot(qn1_3$percentage)
barplot(qn1_3$percentage, names.arg = qn1_3$days)
barplot(qn1_3$percentage, names.arg = qn1_3$days, lty =1)
barplot(qn1_3$percentage, names.arg = qn1_3$days, lty = 2)
?lty
?barplot
barplot(qn1_3$percentage, names.arg = qn1_3$days, las = 2)
#tutorial 4
qn2_1 = read_excel('../data/MSPUS.xls')
View(qn2_1)
#tutorial 4
qn2_1 = read_excel('../data/MSPUS.xls', skip = 10)
View(qn2_1)
#tutorial 4
qn2_1 = read_excel('../data/MSPUS.xls', skip = 9)
View(qn2_1)
#tutorial 4
qn2_1 = read_excel('../data/MSPUS.xls', skip = 10)
?read_excel
#tutorial 4
qn2_1 = read_excel('../data/MSPUS.xls', skip = 10, col_names = c('date','price'))
View(qn2_1)
#tutorial 4
qn2_1 = read_excel('../data/MSPUS.xls', skip = 11, col_names = c('date','price'))
#tutorial 4
qn2_1 = read_excel('../data/MSPUS.xls', skip = 11, col_names = c('date','price'), col_types = c('date', 'numeric'))
plot(qn2_1$date, qn2_1$price)
plot(qn2_1$date, qn2_1$price, type = 'o')
plot(qn2_1$date, qn2_1$price, type = 'l')
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 3)
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2)
scipen(999)
?sci
options(scipen=999)
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2)
?plot
?plot
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, xaxt = 'n')
?axis
axis(1, at = c(1980,2000,2020))
axis(1, at = c(1980,2000,2020), labels = TRUE)
axis(1, at = c(1980, 2000, 2020), labels = TRUE)
axis(1, at = c('1980', '2000', '2020'), labels = TRUE)
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, xaxt = 'n')
axis(1, at = c(1980, 2000, 2020), labels = TRUE)
axis(1, at = c(2000, 2020), labels = TRUE)
#tutorial 4
qn2_1 = read_excel('../data/MSPUS.xls', skip = 11, col_names = c('date','price'), col_types = c('date', 'numeric'))
options(scipen=999)
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, xaxt = 'n')
axis(1, at = c(2000, 2020), labels = TRUE)
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2)
axis(1, at = c(1980, 2000, 2020), labels = TRUE)
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, xaxt = 'n')
axis(1, at = c(2,4,6), labels = TRUE)
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, xaxt = 'n')
axis(1, tick = c(2,4,6))
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, xaxt = 'n')
axis(1, tick = c(2,4,6))
?axis
?plot
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, xaxt = 'n')
axis(1, tick = c(2,4,6))
axis(1, tick = c(3,4,6))
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, xaxt = 'n')
axis(1, tick = c(3,4,6))
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, xaxt = 'n')
axis(1, at = c(3,4,6))
?plot
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, xaxt = c(2,4,6))
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2)
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, las = 1)
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, las = 1, xaxt = 'n')
axis(1, at = c(2,4,6), labels = c(1980,2000,2002))
axis(1, at = seq(2,6,2), labels = c(1980,2000,2002))
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, las = 1, xaxt = 'n')
axis(1, at = seq(2,6,2), labels = c(1980,2000,2002))
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, las = 1, xaxt = 'n')
axis(1, at = seq(2,6,2))
labels = c(1980,2000,2002)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
dates = qns2_1$date
prices = qns2_1$price
qns2_1 = read_xls('../data/MSPUS.xls', skip = 11, col_names = c('date', 'price'), col_types = c('date', 'numeric'))
dates = qns2_1$date
prices = qns2_1$price
plot(dates,prices,
main = 'Median Sales Price of Houses sold for the United States',
xlab = '',
ylab = '',
type = 'l',
las = 1,
lwd = 3,
cex.axis = 0.8)
knitr::opts_chunk$set(message = FALSE, warning = FALSE,
include = TRUE,
fig.align = "center",  out.width = "80%")
qn2_1 <- read_excel("../data/MSPUS.xls", skip = 10, col_names = TRUE) %>%
rename(date = 1, price = 2) %>%
mutate(date = ymd(date))
qn2_1 <- read_excel("../data/MSPUS.xls", skip = 10, col_names = TRUE) %>%
rename(date = 1, price = 2) %>%
mutate(date = ymd(date))
qn2_1 <- read_excel("../data/MSPUS.xls", skip = 10, col_names = TRUE) %>%
rename(date = 1, price = 2) %>%
mutate(date = ymd(date))
setwd("C:/Users/shiro/Desktop/DSA2101/src")
qn2_1 <- read_excel("../data/MSPUS.xls", skip = 10, col_names = TRUE) %>%
rename(date = 1, price = 2) %>%
mutate(date = ymd(date))
getwd()
options(scipen = 999)
plot(qn2_1$date, qn2_1$price, type = "l", lwd = 3,
xlab = "", ylab = "",
main = "Median Sales Price of Houses sold for the United States", las = 1)
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, las = 1, xaxt = 'n')
plot(qn2_1$date, qn2_1$price, type = 'l', lwd = 2, las = 1)
qn2_3 = qn2_1 %>% filter('2015-01-01'<=date<='2023-10-31')
qn2_3 = qn2_1 %>% filter('2015-01-01'=<date=<'2023-10-31')
qn2_3 = qn2_1 %>% filter('2015-01-01' <= date <= '2023-10-31')
qn2_3 = qn2_1 %>% filter('2015-01-01' <= date & date <= '2023-10-31')
View(qn2_3)
plot(qn2_3$date, qn2_3$price)
plot(qn2_3$date, qn2_3$price, type ='b')
plot(qn2_3$date, qn2_3$price, type ='o')
plot(qn2_3$date, qn2_3$price, type ='o', pch = 16)
library(nycflights13)
data(flights)
View(flights)
flights %>% filter(month == 6)
flights %>% filter(month == 6) %>% count(dest)
flights %>% filter(month == 6) %>% count(dest) %>% slice_max(n, n=1)
flights %>% group_by(carrier) %>% count(wt = mean(distance))
flights %>% group_by(carrier) %>% count(wt = mean(distance)) %>% slice_max(n, n=1)
flights %>% group_by(carrier) %>% count(wt = mean(distance)) %>% slice_max(n, n=1)
flights %>% group_by(carrier) %>% count(wt = mean(distance)) %>% ungroup() %>% slice_max(n, n=1)
?mutate
flights %>% mutate(speed = distance / air_time) %>% slice_max(speed, 1)
flights %>% mutate(speed = distance / air_time)
flights %>% mutate(speed = distance / air_time) %>% slice_max(speed, n=1)
flights %>% mutate(speed = distance / air_time) %>% slice_max(speed, n=1) %>%
select(carrier, flight)
flights %>% count(days)
flights %>% count(day)
flights %>% count(days // 7)
flights %>% count(days % 7)
flights %>% count(days = days % 7)
flights %>% mutate(days = days % 7)
flights %>% mutate(day = day % 7)
7 % 7
7 %& 7
7 %% 7
flights %>% mutate(day = day %% 7)
flights %>% count(day%%7)
flights %>% count(day%%7) %>% slice_max(n, n=1)
flights %>% mutate(day = day(day))
flights %>% mutate(day = days(day))
View(flights %>% mutate(day = days(day)))
flights %>% mutate(day = weekdays(day))
flights %>% mutate(day = weekdays(day))
flights %>% mutate(day = weekday(day))
flights %>% mutate(day = weekdays(day))
data(flights)
flights %>% mutate(day = weekdays(day))
?flights
glimpse(flights)
flights %>% mutate(day = date(day))
flights %>% count(day%%7) %>% slice_max(n, n=1)
#tutorial 4
qn2_1 = read_excel('../data/MSPUS.xls', skip = 11, col_names = c('date','price'), col_types = c('date', 'numeric'))
qn2_3 = qn2_1 %>% filter('2015-01-01' <= date & date <= '2023-10-31')
View(qn2_3)
qn2_3 %>% mutate(year = year(year))
glimpse(qn2_3)
qn2_3 %>% mutate(year = year(date))
qn2_3 %>% mutate(year = year(date), quarter = quarter(date))
qn2_3 %>% mutate(year = year(date), quarter = quarters(date))
# 3. Which flight traveled the fastest (highest average speed in miles per hour)?
flights %>%
mutate(speed = distance/(air_time/60)) %>%
slice_max(speed, n = 1) %>%
select(carrier, flight, origin, dest, speed)
flights %>% filter(month == 6) %>% count(dest) %>% slice_max(n, n=1)
flights %>% group_by(carrier) %>% count(wt = mean(distance)) %>% ungroup() %>% slice_max(n, n=1)
flights %>% mutate(speed = distance / air_time) %>% slice_max(speed, n=1) %>%
select(carrier, flight)
flights %>% count(day%%7) %>% slice_max(n, n=1)
# 2. Which carrier had the greatest average distance per flights?
flights %>%
group_by(carrier) %>%
summarize(avg_dist = mean(distance)) %>%
slice_max(avg_dist, n = 1)
flights %>% filter(month == 6) %>% count(dest) %>% slice_max(n, n=1)
# 1. Which destination received the most flights from New York in June?
flights %>%
filter(month == 6) %>%
count(dest, sort = TRUE) %>%
head(1)
flights %>% group_by(carrier) %>% count(wt = mean(distance)) %>% ungroup() %>% slice_max(n, n=1)
# 2. Which carrier had the greatest average distance per flights?
flights %>%
group_by(carrier) %>%
summarize(avg_dist = mean(distance)) %>%
slice_max(avg_dist, n = 1)
flights %>% mutate(speed = distance / air_time) %>% slice_max(speed, n=1) %>%
select(carrier, flight)
flights %>% count(day%%7) %>% slice_max(n, n=1)
flights %>% count(day%%7)
# 4. What day of the week saw the most flights?
flights %>%
count(weekdays(time_hour))
flights %>% count(weekdays(day))
?count
flights %>% na.omit() %>% count(days%%7)
flights %>% na.omit()
flights %>% na.omit() %>% count(days%%7)
flights %>% na.omit() %>% count(day%%7)
flights %>% count(day%%7)
flights %>% count(weekdays(time_hour))
#or
flights %>% mutate(day = day%%7)
#or
flights %>% mutate(day = day%%7) %>% count(day)
flights %>% count(weekdays(time_hour))
?flights
#or
flights %>% mutate(day = day%%7) %>% count(day)
#or
flights %>% mutate(day = day%%7)
%>% count(day)
#or
flights %>% mutate(day = day%%7) %>% count(day)
